{"ast":null,"code":"var _jsxFileName = \"E:\\\\freelance\\\\react learnings\\\\my-app\\\\Frontend\\\\src\\\\pages\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const userId = localStorage.getItem(\"userId\");\n  const token = localStorage.getItem(\"userToken\");\n\n  // Fetch cart data\n  const fetchCart = async () => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/cart/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error(\"Failed to fetch cart\");\n      const data = await res.json();\n      setCartItems(data.products || []);\n    } catch (err) {\n      console.error(\"Error fetching cart:\", err);\n    }\n  };\n  useEffect(() => {\n    if (userId && token) {\n      fetchCart();\n    }\n  }, [userId, token]);\n\n  // Update Cart (Increase / Decrease)\n  const updateCart = async (productId, action) => {\n    try {\n      // Optimistic UI update (updates UI before API call)\n      setCartItems(prevCart => prevCart.map(item => item.product._id === productId ? {\n        ...item,\n        quantity: action === \"increase\" ? item.quantity + 1 : item.quantity - 1\n      } : item));\n      const res = await fetch(`http://localhost:5000/api/cart/${action}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          productId\n        })\n      });\n      if (!res.ok) throw new Error(`Failed to ${action} item`);\n      fetchCart(); // Refresh cart data after successful update\n    } catch (err) {\n      console.error(`Error ${action} item:`, err);\n    }\n  };\n\n  // Remove item from cart\n  const removeItem = async productId => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/cart/remove\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          productId\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to remove item\");\n      fetchCart(); // Refresh cart data\n    } catch (err) {\n      console.error(\"Error removing item:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this) : cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [item.product.name, \" - $\", item.product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCart(item.product._id, \"decrease\"),\n        disabled: item.quantity <= 1,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCart(item.product._id, \"increase\"),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeItem(item.product._id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)]\n    }, item.product._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"yMyLm0mTOdUD4xRL2vnEhQFbjeY=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","userId","localStorage","getItem","token","fetchCart","res","fetch","method","headers","ok","Error","data","json","products","err","console","error","updateCart","productId","action","prevCart","map","item","product","_id","quantity","body","JSON","stringify","removeItem","children","length","fileName","_jsxFileName","lineNumber","columnNumber","name","price","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/freelance/react learnings/my-app/Frontend/src/pages/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Cart = () => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const token = localStorage.getItem(\"userToken\");\r\n\r\n    // Fetch cart data\r\n    const fetchCart = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/api/cart/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            });\r\n            if (!res.ok) throw new Error(\"Failed to fetch cart\");\r\n            const data = await res.json();\r\n            setCartItems(data.products || []);\r\n        } catch (err) {\r\n            console.error(\"Error fetching cart:\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userId && token) {\r\n            fetchCart();\r\n        }\r\n    }, [userId, token]);\r\n\r\n    // Update Cart (Increase / Decrease)\r\n    const updateCart = async (productId, action) => {\r\n        try {\r\n            // Optimistic UI update (updates UI before API call)\r\n            setCartItems(prevCart =>\r\n                prevCart.map(item =>\r\n                    item.product._id === productId\r\n                        ? { ...item, quantity: action === \"increase\" ? item.quantity + 1 : item.quantity - 1 }\r\n                        : item\r\n                )\r\n            );\r\n\r\n            const res = await fetch(`http://localhost:5000/api/cart/${action}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ userId, productId })\r\n            });\r\n\r\n            if (!res.ok) throw new Error(`Failed to ${action} item`);\r\n            fetchCart(); // Refresh cart data after successful update\r\n        } catch (err) {\r\n            console.error(`Error ${action} item:`, err);\r\n        }\r\n    };\r\n\r\n    // Remove item from cart\r\n    const removeItem = async (productId) => {\r\n        try {\r\n            const res = await fetch(\"http://localhost:5000/api/cart/remove\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ userId, productId })\r\n            });\r\n\r\n            if (!res.ok) throw new Error(\"Failed to remove item\");\r\n            fetchCart(); // Refresh cart data\r\n        } catch (err) {\r\n            console.error(\"Error removing item:\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {cartItems.length === 0 ? (\r\n                <p>Your cart is empty.</p>\r\n            ) : (\r\n                cartItems.map(item => (\r\n                    <div key={item.product._id}>\r\n                        <h3>{item.product.name} - ${item.product.price}</h3>\r\n                        <button onClick={() => updateCart(item.product._id, \"decrease\")} disabled={item.quantity <= 1}>-</button>\r\n                        <span>{item.quantity}</span>\r\n                        <button onClick={() => updateCart(item.product._id, \"increase\")}>+</button>\r\n                        <button onClick={() => removeItem(item.product._id)}>Remove</button>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}