{"ast":null,"code":"var _jsxFileName = \"E:\\\\freelance\\\\react learnings\\\\my-app\\\\Frontend\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      const {\n        data\n      } = await axios.post(`http://localhost:5000/api/users/reset-password/${token}`, {\n        password\n      });\n      setMessage(data.message);\n      setTimeout(() => navigate(\"/login\"), 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error resetting password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm new password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }, this);\n};\n_s(ResetPassword, \"ulXCWO0n7ld2tcNyjJprQdaALwA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","handleSubmit","e","preventDefault","data","post","setTimeout","err","_err$response","_err$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["E:/freelance/react learnings/my-app/Frontend/src/pages/ResetPassword.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ResetPassword = () => {\r\n        const { token } = useParams();\r\n        const navigate = useNavigate();\r\n        const [password, setPassword] = useState(\"\");\r\n        const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n        const [message, setMessage] = useState(\"\");\r\n        const [error, setError] = useState(\"\");\r\n\r\n        const handleSubmit = async (e) => {\r\n                e.preventDefault();\r\n                setMessage(\"\");\r\n                setError(\"\");\r\n\r\n                if (password !== confirmPassword) {\r\n                        setError(\"Passwords do not match!\");\r\n                        return;\r\n                }\r\n\r\n                try {\r\n                        const { data } = await axios.post(`http://localhost:5000/api/users/reset-password/${token}`, { password });\r\n                        setMessage(data.message);\r\n                        setTimeout(() => navigate(\"/login\"), 2000);\r\n                } catch (err) {\r\n                        setError(err.response?.data?.message || \"Error resetting password.\");\r\n                }\r\n        };\r\n\r\n        return (\r\n                <div>\r\n                        <h2>Reset Password</h2>\r\n                        <form onSubmit={handleSubmit}>\r\n                                <input\r\n                                        type=\"password\"\r\n                                        placeholder=\"Enter new password\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        required\r\n                                />\r\n                                <input\r\n                                        type=\"password\"\r\n                                        placeholder=\"Confirm new password\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                        required\r\n                                />\r\n                                <button type=\"submit\">Reset Password</button>\r\n                        </form>\r\n                        {message && <p style={{ color: \"green\" }}>{message}</p>}\r\n                        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n                </div>\r\n        );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}